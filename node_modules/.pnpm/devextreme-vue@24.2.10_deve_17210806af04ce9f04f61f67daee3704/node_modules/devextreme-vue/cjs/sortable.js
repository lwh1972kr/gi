/*!
 * devextreme-vue
 * Version: 24.2.10
 * Build date: Fri Aug 29 2025
 *
 * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DxCursorOffset = exports.DxSortable = void 0;
const vue_1 = require("vue");
const index_1 = require("./core/index");
const sortable_1 = __importDefault(require("devextreme/ui/sortable"));
const index_2 = require("./core/index");
const componentConfig = {
    props: {
        allowDropInsideItem: Boolean,
        allowReordering: Boolean,
        autoScroll: Boolean,
        boundary: {},
        container: {},
        cursorOffset: [Object, String],
        data: {},
        dragDirection: String,
        dragTemplate: {},
        dropFeedbackMode: String,
        elementAttr: Object,
        filter: String,
        group: String,
        handle: String,
        height: [Function, Number, String],
        itemOrientation: String,
        moveItemOnDrop: Boolean,
        onAdd: Function,
        onDisposing: Function,
        onDragChange: Function,
        onDragEnd: Function,
        onDragMove: Function,
        onDragStart: Function,
        onInitialized: Function,
        onOptionChanged: Function,
        onRemove: Function,
        onReorder: Function,
        rtlEnabled: Boolean,
        scrollSensitivity: Number,
        scrollSpeed: Number,
        width: [Function, Number, String]
    },
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:allowDropInsideItem": null,
        "update:allowReordering": null,
        "update:autoScroll": null,
        "update:boundary": null,
        "update:container": null,
        "update:cursorOffset": null,
        "update:data": null,
        "update:dragDirection": null,
        "update:dragTemplate": null,
        "update:dropFeedbackMode": null,
        "update:elementAttr": null,
        "update:filter": null,
        "update:group": null,
        "update:handle": null,
        "update:height": null,
        "update:itemOrientation": null,
        "update:moveItemOnDrop": null,
        "update:onAdd": null,
        "update:onDisposing": null,
        "update:onDragChange": null,
        "update:onDragEnd": null,
        "update:onDragMove": null,
        "update:onDragStart": null,
        "update:onInitialized": null,
        "update:onOptionChanged": null,
        "update:onRemove": null,
        "update:onReorder": null,
        "update:rtlEnabled": null,
        "update:scrollSensitivity": null,
        "update:scrollSpeed": null,
        "update:width": null,
    },
    computed: {
        instance() {
            return this.$_instance;
        }
    },
    beforeCreate() {
        this.$_WidgetClass = sortable_1.default;
        this.$_hasAsyncTemplate = true;
        this.$_expectedChildren = {
            cursorOffset: { isCollectionItem: false, optionName: "cursorOffset" }
        };
    }
};
(0, index_1.prepareComponentConfig)(componentConfig);
const DxSortable = (0, vue_1.defineComponent)(componentConfig);
exports.DxSortable = DxSortable;
const DxCursorOffsetConfig = {
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:x": null,
        "update:y": null,
    },
    props: {
        x: Number,
        y: Number
    }
};
(0, index_2.prepareConfigurationComponentConfig)(DxCursorOffsetConfig);
const DxCursorOffset = (0, vue_1.defineComponent)(DxCursorOffsetConfig);
exports.DxCursorOffset = DxCursorOffset;
DxCursorOffset.$_optionName = "cursorOffset";
exports.default = DxSortable;
