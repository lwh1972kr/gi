/*!
 * devextreme-vue
 * Version: 24.2.10
 * Build date: Fri Aug 29 2025
 *
 * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

import { defineComponent } from "vue";
import { prepareComponentConfig } from "./core/index";
import LoadIndicator from "devextreme/ui/load_indicator";
const componentConfig = {
    props: {
        elementAttr: Object,
        height: [Function, Number, String],
        hint: String,
        indicatorSrc: String,
        onContentReady: Function,
        onDisposing: Function,
        onInitialized: Function,
        onOptionChanged: Function,
        rtlEnabled: Boolean,
        visible: Boolean,
        width: [Function, Number, String]
    },
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:elementAttr": null,
        "update:height": null,
        "update:hint": null,
        "update:indicatorSrc": null,
        "update:onContentReady": null,
        "update:onDisposing": null,
        "update:onInitialized": null,
        "update:onOptionChanged": null,
        "update:rtlEnabled": null,
        "update:visible": null,
        "update:width": null,
    },
    computed: {
        instance() {
            return this.$_instance;
        }
    },
    beforeCreate() {
        this.$_WidgetClass = LoadIndicator;
        this.$_hasAsyncTemplate = true;
    }
};
prepareComponentConfig(componentConfig);
const DxLoadIndicator = defineComponent(componentConfig);
export default DxLoadIndicator;
export { DxLoadIndicator };
