/*!
 * devextreme-vue
 * Version: 24.2.10
 * Build date: Fri Aug 29 2025
 *
 * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

import { defineComponent } from "vue";
import { prepareComponentConfig } from "./core/index";
import Splitter from "devextreme/ui/splitter";
import { prepareConfigurationComponentConfig } from "./core/index";
const componentConfig = {
    props: {
        allowKeyboardNavigation: Boolean,
        dataSource: [Array, Object, String],
        disabled: Boolean,
        elementAttr: Object,
        height: [Function, Number, String],
        hoverStateEnabled: Boolean,
        items: Array,
        itemTemplate: {},
        onContentReady: Function,
        onDisposing: Function,
        onInitialized: Function,
        onItemClick: Function,
        onItemCollapsed: Function,
        onItemContextMenu: Function,
        onItemExpanded: Function,
        onItemRendered: Function,
        onOptionChanged: Function,
        onResize: Function,
        onResizeEnd: Function,
        onResizeStart: Function,
        orientation: String,
        rtlEnabled: Boolean,
        separatorSize: Number,
        visible: Boolean,
        width: [Function, Number, String]
    },
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:allowKeyboardNavigation": null,
        "update:dataSource": null,
        "update:disabled": null,
        "update:elementAttr": null,
        "update:height": null,
        "update:hoverStateEnabled": null,
        "update:items": null,
        "update:itemTemplate": null,
        "update:onContentReady": null,
        "update:onDisposing": null,
        "update:onInitialized": null,
        "update:onItemClick": null,
        "update:onItemCollapsed": null,
        "update:onItemContextMenu": null,
        "update:onItemExpanded": null,
        "update:onItemRendered": null,
        "update:onOptionChanged": null,
        "update:onResize": null,
        "update:onResizeEnd": null,
        "update:onResizeStart": null,
        "update:orientation": null,
        "update:rtlEnabled": null,
        "update:separatorSize": null,
        "update:visible": null,
        "update:width": null,
    },
    computed: {
        instance() {
            return this.$_instance;
        }
    },
    beforeCreate() {
        this.$_WidgetClass = Splitter;
        this.$_hasAsyncTemplate = true;
        this.$_expectedChildren = {
            item: { isCollectionItem: true, optionName: "items" }
        };
    }
};
prepareComponentConfig(componentConfig);
const DxSplitter = defineComponent(componentConfig);
const DxItemConfig = {
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:collapsed": null,
        "update:collapsedSize": null,
        "update:collapsible": null,
        "update:maxSize": null,
        "update:minSize": null,
        "update:resizable": null,
        "update:size": null,
        "update:splitter": null,
        "update:template": null,
        "update:text": null,
        "update:visible": null,
    },
    props: {
        collapsed: Boolean,
        collapsedSize: [Number, String],
        collapsible: Boolean,
        maxSize: [Number, String],
        minSize: [Number, String],
        resizable: Boolean,
        size: [Number, String],
        splitter: Object,
        template: {},
        text: String,
        visible: Boolean
    }
};
prepareConfigurationComponentConfig(DxItemConfig);
const DxItem = defineComponent(DxItemConfig);
DxItem.$_optionName = "items";
DxItem.$_isCollectionItem = true;
export default DxSplitter;
export { DxSplitter, DxItem };
