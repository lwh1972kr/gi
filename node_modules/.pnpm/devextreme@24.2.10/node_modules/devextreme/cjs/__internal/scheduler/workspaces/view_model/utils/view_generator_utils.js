/**
 * DevExtreme (cjs/__internal/scheduler/workspaces/view_model/utils/view_generator_utils.js)
 * Version: 24.2.10
 * Build date: Fri Aug 29 2025
 *
 * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.calculateDaysBetweenDates = exports.calculateAlignedWeeksBetweenDates = exports.alignToLastDayOfWeek = exports.alignToFirstDayOfWeek = void 0;
var _date = _interopRequireDefault(require("../../../../../core/utils/date"));

function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    }
}
const DAYS_IN_WEEK = 7;
const MS_IN_DAY = 864e5;
const MAX_WEEKS_IN_MONTH = 6;
const alignToFirstDayOfWeek = (date, firstDayOfWeek) => {
    const newDate = new Date(date);
    let dayDiff = newDate.getDay() - firstDayOfWeek;
    if (dayDiff < 0) {
        dayDiff += 7
    }
    newDate.setDate(newDate.getDate() - dayDiff);
    return newDate
};
exports.alignToFirstDayOfWeek = alignToFirstDayOfWeek;
const alignToLastDayOfWeek = (date, firstDayOfWeek) => {
    const newDate = alignToFirstDayOfWeek(date, firstDayOfWeek);
    newDate.setDate(newDate.getDate() + 7 - 1);
    return newDate
};
exports.alignToLastDayOfWeek = alignToLastDayOfWeek;
const calculateDaysBetweenDates = (fromDate, toDate) => {
    const msDiff = _date.default.trimTime(toDate).getTime() - _date.default.trimTime(fromDate).getTime();
    return Math.round(msDiff / 864e5) + 1
};
exports.calculateDaysBetweenDates = calculateDaysBetweenDates;
const calculateAlignedWeeksBetweenDates = (fromDate, toDate, firstDayOfWeek) => {
    const alignedFromDate = alignToFirstDayOfWeek(fromDate, firstDayOfWeek);
    const alignedToDate = alignToLastDayOfWeek(toDate, firstDayOfWeek);
    const weekCount = calculateDaysBetweenDates(alignedFromDate, alignedToDate) / 7;
    return Math.max(weekCount, 6)
};
exports.calculateAlignedWeeksBetweenDates = calculateAlignedWeeksBetweenDates;
