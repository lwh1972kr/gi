/*!
 * devextreme-vue
 * Version: 24.2.10
 * Build date: Fri Aug 29 2025
 *
 * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

import { ComponentPublicInstance } from 'vue';
import Configuration, { ExpectedChild } from './configuration';
interface IConfigurationOwner {
    $_expectedChildren: Record<string, ExpectedChild>;
}
interface IConfigurationComponent extends IConfigurationOwner, ComponentPublicInstance {
    $_optionName: string;
    $_isCollectionItem: boolean;
    $_predefinedProps: Record<string, any>;
}
interface IConfigurable extends IConfigurationOwner {
    $_config: Configuration;
    $_innerChanges: any;
}
interface IComponentInfo {
    optionPath: string;
    isCollection: boolean;
    removed?: boolean;
}
declare function getConfig(vueInstance: Pick<ComponentPublicInstance, '$'>): Configuration | undefined;
declare function getInnerChanges(vueInstance: Pick<ComponentPublicInstance, '$'>): any;
declare function initOptionChangedFunc(config: any, props: any, vueInstance: Pick<ComponentPublicInstance, '$' | '$props' | '$emit' | '$options'>, innerChanges: any): void;
declare function initDxConfiguration(): import("@vue/runtime-core").DefineComponent<{}, {}, {}, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{}>>, {}>;
export { initDxConfiguration, IComponentInfo, IConfigurable, IConfigurationComponent, initOptionChangedFunc, getConfig, getInnerChanges, };
