/*!
 * devextreme-vue
 * Version: 24.2.10
 * Build date: Fri Aug 29 2025
 *
 * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

import { defineComponent } from "vue";
import { prepareComponentConfig } from "./core/index";
import ActionSheet from "devextreme/ui/action_sheet";
import { prepareConfigurationComponentConfig } from "./core/index";
const componentConfig = {
    props: {
        cancelText: String,
        dataSource: [Array, Object, String],
        disabled: Boolean,
        elementAttr: Object,
        height: [Function, Number, String],
        hint: String,
        hoverStateEnabled: Boolean,
        itemHoldTimeout: Number,
        items: Array,
        itemTemplate: {},
        onCancelClick: Function,
        onContentReady: Function,
        onDisposing: Function,
        onInitialized: Function,
        onItemClick: Function,
        onItemContextMenu: Function,
        onItemHold: Function,
        onItemRendered: Function,
        onOptionChanged: Function,
        rtlEnabled: Boolean,
        showCancelButton: Boolean,
        showTitle: Boolean,
        target: {},
        title: String,
        usePopover: Boolean,
        visible: Boolean,
        width: [Function, Number, String]
    },
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:cancelText": null,
        "update:dataSource": null,
        "update:disabled": null,
        "update:elementAttr": null,
        "update:height": null,
        "update:hint": null,
        "update:hoverStateEnabled": null,
        "update:itemHoldTimeout": null,
        "update:items": null,
        "update:itemTemplate": null,
        "update:onCancelClick": null,
        "update:onContentReady": null,
        "update:onDisposing": null,
        "update:onInitialized": null,
        "update:onItemClick": null,
        "update:onItemContextMenu": null,
        "update:onItemHold": null,
        "update:onItemRendered": null,
        "update:onOptionChanged": null,
        "update:rtlEnabled": null,
        "update:showCancelButton": null,
        "update:showTitle": null,
        "update:target": null,
        "update:title": null,
        "update:usePopover": null,
        "update:visible": null,
        "update:width": null,
    },
    computed: {
        instance() {
            return this.$_instance;
        }
    },
    beforeCreate() {
        this.$_WidgetClass = ActionSheet;
        this.$_hasAsyncTemplate = true;
        this.$_expectedChildren = {
            item: { isCollectionItem: true, optionName: "items" }
        };
    }
};
prepareComponentConfig(componentConfig);
const DxActionSheet = defineComponent(componentConfig);
const DxItemConfig = {
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:disabled": null,
        "update:icon": null,
        "update:onClick": null,
        "update:stylingMode": null,
        "update:template": null,
        "update:text": null,
        "update:type": null,
    },
    props: {
        disabled: Boolean,
        icon: String,
        onClick: Function,
        stylingMode: String,
        template: {},
        text: String,
        type: String
    }
};
prepareConfigurationComponentConfig(DxItemConfig);
const DxItem = defineComponent(DxItemConfig);
DxItem.$_optionName = "items";
DxItem.$_isCollectionItem = true;
export default DxActionSheet;
export { DxActionSheet, DxItem };
